version: "3"
services:
  nginx:
    build: 
      context: ./nginx
      cache_from:
        - nginx:latest
      args:
        BUILDKIT_INLINE_CACHE: 1
    image: nginx:8888
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      # - ./nginx:/etc/nginx/conf.d
      # - /home/ubuntu/static:/static
      - test_volume:/static
      - test_volume_2:/media
    depends_on:
      - web

  web:
    build:
      context: .
      cache_from:
        - django:gunicorn4
      args:
        BUILDKIT_INLINE_CACHE: 1
    image: django:gunicorn4
    container_name: django
    command: /bin/bash -c "source env/bin/activate && gunicorn --bind 0.0.0.0:8000 config.wsgi:application"
    volumes:
      #     - /home/ubuntu/static:/home/ubuntu/static
      - test_volume:/home/ubuntu/static
      - test_volume_2:/home/ubuntu/media
    # ports:
    #    - "8000:8000"
    expose:
      - "8000"

  worker:
    build:
      context: .
      cache_from:
        - django:gunicorn4
      args:
        BUILDKIT_INLINE_CACHE: 1
    image: django:gunicorn4
    container_name: worker
    # command: celery -A ClothesSeparationAPI.tasks worker --loglevel=info
    command: /bin/bash -c "source env/bin/activate && celery -A config worker --loglevel=info --max-tasks-per-child 1 -c 1"
    volumes:
      #     - /home/ubuntu/static:/home/ubuntu/static
      - test_volume:/home/ubuntu/static
      - test_volume_2:/home/ubuntu/media
      # - ./worker:/home/ubuntu
    # ports:
    #    - "8000:8000"
    expose:
      - "5672"
    tty: true
    depends_on:
      - web
      - rabbit

  rabbit:
    build:
      context: ./rabbit
      cache_from:
        - rabbitmq:3-management
      args:
        BUILDKIT_INLINE_CACHE: 1
    image: rabbitmq:3-management
    container_name: rabbit
    expose:
      - "5672"
    ports:
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    # volumes:
    #   - ./host:/home/ubuntu

volumes:
  test_volume: {}
  test_volume_2: {}
